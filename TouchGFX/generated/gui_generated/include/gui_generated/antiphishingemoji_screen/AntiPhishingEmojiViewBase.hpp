/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ANTIPHISHINGEMOJIVIEWBASE_HPP
#define ANTIPHISHINGEMOJIVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/antiphishingemoji_screen/AntiPhishingEmojiPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class AntiPhishingEmojiViewBase : public touchgfx::View<AntiPhishingEmojiPresenter>
{
public:
    AntiPhishingEmojiViewBase();
    virtual ~AntiPhishingEmojiViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void emoji1Select()
    {
        // Override and implement this function in AntiPhishingEmoji
    }

    virtual void emoji2Select()
    {
        // Override and implement this function in AntiPhishingEmoji
    }

    virtual void emoji3Select()
    {
        // Override and implement this function in AntiPhishingEmoji
    }

    virtual void emoji4Select()
    {
        // Override and implement this function in AntiPhishingEmoji
    }

    virtual void emoji5Select()
    {
        // Override and implement this function in AntiPhishingEmoji
    }

    virtual void emoji6Select()
    {
        // Override and implement this function in AntiPhishingEmoji
    }

    virtual void submitEmojiSelection()
    {
        // Override and implement this function in AntiPhishingEmoji
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger > antiPhishingIcon1;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger > antiPhishingIcon2;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger > antiPhishingIcon3;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger > antiPhishingIcon4;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger > antiPhishingIcon5;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger > antiPhishingIcon6;
    touchgfx::TextArea actionDescription;
    touchgfx::ButtonWithLabel confirmEmojiSelection;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<AntiPhishingEmojiViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<AntiPhishingEmojiViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // ANTIPHISHINGEMOJIVIEWBASE_HPP
