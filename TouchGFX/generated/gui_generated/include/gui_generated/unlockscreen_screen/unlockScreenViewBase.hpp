/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef UNLOCKSCREENVIEWBASE_HPP
#define UNLOCKSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/unlockscreen_screen/unlockScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <gui/containers/PinPadCustomContainer.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/progress_indicators/LineProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class unlockScreenViewBase : public touchgfx::View<unlockScreenPresenter>
{
public:
    unlockScreenViewBase();
    virtual ~unlockScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void changePinNotesText();

    /*
     * Virtual Action Handlers
     */
    virtual void confirmFirstUse()
    {
        // Override and implement this function in unlockScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image background;
    PinPadCustomContainer PinPad;
    touchgfx::TextArea unlockHelp;
    touchgfx::TextArea productName;
    touchgfx::TextArea author;
    touchgfx::TextArea version;
    touchgfx::LineProgress submitProgress;
    touchgfx::PainterRGB888 submitProgressPainter;
    touchgfx::Image bitcoinLogo;
    touchgfx::ModalWindow deviceSetupBegin;
    touchgfx::Box blackBackgroundSetup;
    touchgfx::ButtonWithLabel beginSetupButton;
    touchgfx::TextArea weclomeToSetupText;
    touchgfx::TextArea setupSteps;
    touchgfx::ModalWindow firstPowerUpDisplay;
    touchgfx::Box blackBackground;
    touchgfx::TextArea notice_power_on_first_time_1;
    touchgfx::ButtonWithLabel FirstUseContinue;
    touchgfx::TextArea notice_power_on_first_time;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<unlockScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 4080;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // UNLOCKSCREENVIEWBASE_HPP
