/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SEEDPHRASESETUPDISPLAYVIEWBASE_HPP
#define SEEDPHRASESETUPDISPLAYVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/seedphrasesetupdisplay_screen/SeedPhraseSetupDisplayPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <gui/containers/SeedWordCustomContainer.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class SeedPhraseSetupDisplayViewBase : public touchgfx::View<SeedPhraseSetupDisplayPresenter>
{
public:
    SeedPhraseSetupDisplayViewBase();
    virtual ~SeedPhraseSetupDisplayViewBase() {}
    virtual void setupScreen();

    virtual void seedWordScrollListUpdateItem(SeedWordCustomContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in SeedPhraseSetupDisplay
    }

    /*
     * Virtual Action Handlers
     */
    virtual void seedPhraseConfirmationCancel()
    {
        // Override and implement this function in SeedPhraseSetupDisplay
    }

    virtual void seedPhraseBackupVerification()
    {
        // Override and implement this function in SeedPhraseSetupDisplay
    }

    virtual void answerASelected()
    {
        // Override and implement this function in SeedPhraseSetupDisplay
    }

    virtual void answerBSelected()
    {
        // Override and implement this function in SeedPhraseSetupDisplay
    }

    virtual void answerCSelected()
    {
        // Override and implement this function in SeedPhraseSetupDisplay
    }

    virtual void answerDSelected()
    {
        // Override and implement this function in SeedPhraseSetupDisplay
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box l2;
    touchgfx::Box l3;
    touchgfx::Slider progressSlider;
    touchgfx::ScrollList seedWordScrollList;
    touchgfx::DrawableListItems<SeedWordCustomContainer, 10> seedWordScrollListListItems;
    touchgfx::TextAreaWithOneWildcard walletName;
    touchgfx::TextArea screenName;
    touchgfx::TextArea walletBackupNotice;
    touchgfx::ModalWindow exitConfirmation;
    touchgfx::Box washoutSeedPhraseConfirm;
    touchgfx::TextArea seedPhraseBackupWarning;
    touchgfx::ButtonWithLabel seedPhraseBackupConfirmCancel;
    touchgfx::ButtonWithLabel seedPhraseBackupConfirm;
    touchgfx::ModalWindow seedPhraseVerification;
    touchgfx::TextArea backupVerificationTitle;
    touchgfx::TextAreaWithOneWildcard verificationWordNumber;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger > > optionAFlx;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger > > optionBFlx;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger > > optionCFlx;
    touchgfx::WildcardTextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger > > optionDFlx;
    touchgfx::ModalWindow seedPhraseBackupComplete;
    touchgfx::TextArea backupCompleteText;
    touchgfx::TextArea backupCompleteNoSharingWarning;
    touchgfx::ButtonWithLabel backupCompleteProceed;
    touchgfx::ButtonWithLabel genNewSeedPhraseButton;
    touchgfx::ButtonWithLabel confirmSeedPhraseBackup;

    /*
     * Wildcard Buffers
     */
    static const uint16_t WALLETNAME_SIZE = 71;
    touchgfx::Unicode::UnicodeChar walletNameBuffer[WALLETNAME_SIZE];
    static const uint16_t VERIFICATIONWORDNUMBER_SIZE = 3;
    touchgfx::Unicode::UnicodeChar verificationWordNumberBuffer[VERIFICATIONWORDNUMBER_SIZE];
    static const uint16_t OPTIONAFLX_SIZE = 10;
    touchgfx::Unicode::UnicodeChar optionAFlxBuffer[OPTIONAFLX_SIZE];
    static const uint16_t OPTIONBFLX_SIZE = 10;
    touchgfx::Unicode::UnicodeChar optionBFlxBuffer[OPTIONBFLX_SIZE];
    static const uint16_t OPTIONCFLX_SIZE = 10;
    touchgfx::Unicode::UnicodeChar optionCFlxBuffer[OPTIONCFLX_SIZE];
    static const uint16_t OPTIONDFLX_SIZE = 10;
    touchgfx::Unicode::UnicodeChar optionDFlxBuffer[OPTIONDFLX_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SeedPhraseSetupDisplayViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<SeedPhraseSetupDisplayViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<SeedPhraseSetupDisplayViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // SEEDPHRASESETUPDISPLAYVIEWBASE_HPP
